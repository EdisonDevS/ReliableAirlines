<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnGeneral.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>